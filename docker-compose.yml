version: '3.9'

services:
  maven-build:
    image: maven:3.9
    container_name: maven-build-container_test
    volumes:
      - .:/app
    working_dir: /app
    command: [ "mvn", "clean", "install" ]
  
  spring-docker:
    image: openjdk:17
    container_name: spring-docker-container
    volumes:
      - ./target:/app
    ports:
      - 8080:8080
    command: ["java", "-jar", "/app/docker-build-spring-service-0.0.1-SNAPSHOT.jar", "--datasource.host=pg_db_test"]

    depends_on: 
      maven-build:
        condition: service_completed_successfully

  database:
    container_name: pg_db_test
    image: postgres:15
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test
    volumes:
      - ./data/postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
  # pgadmin:
  #   container_name: pgadmin_test
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: noemail@noemail.com
  #     PGADMIN_DEFAULT_PASSWORD: root
  #   ports:
  #     - "5050:80"


  # gradle-build: 
  #   image: gradle:8.2.1
  #   container_name: gradle-build
  #   volumes:
  #     - .:/app
  #   working_dir: /app 
  #   command: ["./gradlew", "build", "--scan"]

  

